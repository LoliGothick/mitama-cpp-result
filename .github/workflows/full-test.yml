name: Full Test

on:
  push:
    branches: [ master, develop, feature/renovate-docs ]
  pull_request:
    branches: [ develop ]

env:
  BOOST_VERSION: 1.73.0

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        compiler: [ clang, gcc ]
        compiler_version: [ 7, 8, 9, 10 ]
        exclude:
          - compiler: gcc
            compiler_version: 7
        include:
          - compiler: clang
            cc_prefix: clang-
            cxx_prefix: clang++-
            package_prefix: clang-
          - compiler: gcc
            cc_prefix: gcc-
            cxx_prefix: g++-
            package_prefix: g++-
    env:
      CC: ${{ matrix.cc_prefix }}${{ matrix.compiler_version }}
      CXX: ${{ matrix.cxx_prefix }}${{ matrix.compiler_version }}
      CACHE_KEY_PREFIX: ${{ github.job }}-${{ matrix.package_prefix }}${{ matrix.compiler_version }}-${{ matrix.build_type }}
    steps:
      - uses: actions/checkout@v1
      - run: git submodule update --init --recursive
      - run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - run: sudo apt-get -qq update
      - name: Install ${{ matrix.package_prefix }}${{ matrix.compiler_version }}
        run: sudo apt-get install -y -qq pkg-config cmake ${{ matrix.package_prefix }}${{ matrix.compiler_version }}

      - name: Restore & Cache boost (${{ env.BOOST_VERSION }})
        uses: actions/cache@v1
        id: boost-cache
        with:
          path: ${{ runner.temp }}/libs/boost
          key: ${{ env.CACHE_KEY_PREFIX }}-boost-${{ env.BOOST_VERSION }}
      - name: Install boost (${{ env.BOOST_VERSION }}) as static
        if: steps.boost-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ runner.temp }}/libs/boost
          git clone -q -b boost-${{ env.BOOST_VERSION }} --recursive https://github.com/boostorg/boost.git
          cd boost
          ./bootstrap.sh
          sudo ./b2 link=static install -j2 --prefix=${{ runner.temp }}/libs/boost || exit 0
        working-directory: ${{ runner.temp }}

      - name: Build and test
        run: |
          mkdir build && cd build
          cmake ..             \
            -DBUILD_TESTING=ON \
            -DBOOST_ROOT=${{ runner.temp }}/libs/boost
          make
          make test

      - name: Document test
        run: |
          cd docs
          curl -s https://api.github.com/repos/LoliGothick/mkdocs-smoke-test/releases \
            | jq -r '.[0].assets[] | select(.name | test("x86_64-unknown-linux-musl.zip")) | .browser_download_url' \
            | xargs -n1 curl -LOk
          unzip x86_64-unknown-linux-musl.zip
          sed -i 's#__COMPILER__#${{ matrix.cxx_prefix }}${{ matrix.compiler_version }}#g' config.toml
          sed -i 's#__BOOST_ROOT__#${{ runner.temp }}/libs/boost#g' config.toml
          x86_64-unknown-linux-musl/release/mkdocs-smoke-test --directory=docs --config=./config.toml
