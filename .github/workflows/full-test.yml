name: Catch and Flow

on:
  push:
    branches: [ feature/catch-and-flow ]
#  schedule:
#    - cron: '00 21 * * 1'
#    branches: [ develop ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix: # 13 boost version * 7 compiler version = 91 jobs
        boost_version: [ 1.67.0, 1.68.0, 1.69.0, 1.70.0,
                         1.71.0, 1.72.0, 1.73.0, 1.74.0 ]
        config:
          - {
            name: "GCC 8",
            cc: "gcc-8", cxx: "g++-8",
          }
          - {
            name: "GCC 9",
            cc: "gcc-9", cxx: "g++-9",
          }
          - {
            name: "GCC 10",
            cc: "gcc-10", cxx: "g++-10",
          }
          - {
            name: "Clang 7",
            cc: "clang-7", cxx: "clang++-7",
          }
          - {
            name: "Clang 8",
            cc: "clang-8", cxx: "clang++-8",
          }
          - {
            name: "Clang 9",
            cc: "clang-9", cxx: "clang++-9",
          }
          - {
            name: "Clang 10",
            cc: "clang-10", cxx: "clang++-10",
          }
    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
    steps:
      - uses: actions/checkout@v1
      - run: git submodule update --init --recursive
      - run: sudo apt-get -qq update

      - name: Install Specific Compiler (${{ matrix.config.cc }})
        run: sudo apt-get install -y -qq pkg-config cmake ${{ matrix.config.cc }}

      - name: Restore & Cache boost (${{ matrix.boost_version }})
        uses: actions/cache@v1
        id: boost-cache
        with:
          path: ${{ runner.temp }}/libs/boost
          key: ${{ matrix.config.name }}-boost-${{ matrix.boost_version }}
      - name: Install boost (${{ matrix.boost_version }}) as static
        if: steps.boost-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ runner.temp }}/libs/boost
          git clone -q -b boost-${{ matrix.boost_version }} --recursive https://github.com/boostorg/boost.git
          cd boost
          ./bootstrap.sh
          sudo ./b2 link=static install -j2 --prefix=${{ runner.temp }}/libs/boost || exit 0
        working-directory: ${{ runner.temp }}

      - name: Build and test
        run: |
          mkdir build && cd build
          cmake ..             \
            -DBUILD_TESTING=ON \
            -DBOOST_ROOT=${{ runner.temp }}/libs/boost
          make
          make test
