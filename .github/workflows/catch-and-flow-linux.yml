name: Catch and Flow for Linux

on:
  push:
    paths:
      - 'include/**'
      - 'test/**'
    branches: [ 'feature/*' ]
  pull_request:
    branches: [ develop ]

env:
  BOOST_VERSION: 1.75.0
  FMTLIB_VERSION: 8.0.0
  CATCH2_VERSION: v3.0.0-preview3

jobs:
  catch_and_flow:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        config:
          - {
            name: "Latest Version of GCC 8.x",
            cc: "gcc", cxx: "g++",
          }
          - {
            name: "Latest Version of GCC 9.x",
            cc: "gcc-9", cxx: "g++-9",
          }
          - {
            name: "Latest Version of GCC 10.x",
            cc: "gcc-10", cxx: "g++-10",
          }
          - {
            name: "Latest Version of Clang 7.x",
            cc: "clang-7", cxx: "clang++-7",
          }
          - {
            name: "Latest Version of Clang 8.x",
            cc: "clang-8", cxx: "clang++-8",
          }
          - {
            name: "Latest Version of Clang 9.x",
            cc: "clang-9", cxx: "clang++-9",
          }
          - {
            name: "Latest Version of Clang 10.x",
            cc: "clang-10", cxx: "clang++-10",
          }
    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
    steps:
      - uses: actions/checkout@v1
      - run: git submodule update --init --recursive
      - run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Install ${{ matrix.config.cc }}
        run: |
          sudo add-apt-repository universe
          sudo apt-get -qq update
          sudo apt-get install -y -qq pkg-config cmake ${{ matrix.config.cc }}

      - name: Compiler Version
        run: ${{ matrix.config.cxx }} --version

      - name: Restore & Cache boost-${{ env.BOOST_VERSION }}
        uses: actions/cache@v1
        id: boost-cache
        with:
          path: ${{ runner.temp }}/libs/boost
          key: ${{ matrix.config.name }}-boost-${{ env.BOOST_VERSION }}

      - name: Install boost$-{{ env.BOOST_VERSION }} as static
        if: steps.boost-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ runner.temp }}/libs/boost
          git clone -q -b boost-${{ env.BOOST_VERSION }} --recursive https://github.com/boostorg/boost.git
          cd boost
          ./bootstrap.sh
          sudo ./b2 link=static install -j2 --prefix=${{ runner.temp }}/libs/boost || exit 0
        working-directory: ${{ runner.temp }}

      - name: Restore & Cache {fmt}-${{ env.FMTLIB_VERSION }}
        uses: actions/cache@v1
        id: fmtlib-cache
        with:
          path: ${{ runner.temp }}/libs/fmtlib
          key: ${{ matrix.config.name }}-fmtlib-${{ env.FMTLIB_VERSION }}

      - name: Install {fmt}-${{ env.FMTLIB_VERSION }}
        if: steps.fmtlib-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ runner.temp }}/libs/fmtlib
          git clone -q --recursive https://github.com/fmtlib/fmt
          cd fmt && git checkout ${{ env.FMTLIB_VERSION }}
          mkdir build -p && cd build
          cmake -DBUILD_SHARED_LIBS=TRUE -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}/libs/fmtlib ..
          make -j4 && sudo make install || exit 0
        working-directory: ${{ runner.temp }}

      - name: Restore & Cache Catch2-${{ env.CATCH2_VERSION }}
        uses: actions/cache@v1
        id: catch2-cache
        with:
          path: ${{ runner.temp }}/libs/catch2
          key: ${{ matrix.config.name }}-catch2-${{ env.CATCH2_VERSION }}

      - name: Install Catch2-${{ env.CATCH2_VERSION }}
        if: steps.catch2-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ runner.temp }}/libs/catch2
          git clone -q --recursive https://github.com/catchorg/Catch2
          cd Catch2 && git checkout ${{ env.CATCH2_VERSION }}
          mkdir build -p && cd build
          cmake -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}/libs/catch2 ..
          make -j4 && sudo make install || exit 0
        working-directory: ${{ runner.temp }}

      - name: Build and test
        run: |
          mkdir build && cd build
          cmake ..                   \
            -DBUILD_TESTING=ON        \
            -DBoost_USE_STATIC_LIBS=ON \
            -DFMT_ROOT=${{ runner.temp }}/libs/fmtlib  \
            -DBOOST_ROOT=${{ runner.temp }}/libs/boost  \
            -DCATCH2_ROOT=${{ runner.temp }}/libs/catch2 \
          make
          make test
